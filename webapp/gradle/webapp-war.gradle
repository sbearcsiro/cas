apply plugin: "war"
apply plugin: "com.moowork.node"

node {
    version = "${nodeVersion}"
    nodeModulesDir = project(":webapp").projectDir
    download = true
}

if (!Boolean.getBoolean("skipNpmCache")) {
    npm_install.dependsOn(npm_cache_clean)
}  else {
    npm_install.enabled = false
}

task npmLint(type: NpmTask) {
    dependsOn npm_install
    description "Lint the JavaScript files"
    group "UI"
    args = ['run', 'lint', '--silent']
}

task compileSass(type: NpmTask) {
    group 'UI'
    dependsOn npm_install
    description "Compile Sass"
    args = ['run', 'gulp', '--silent']
}

if (!rootProject.publishingRelease && !Boolean.getBoolean("skipNpmLint")) {
    processResources.dependsOn npmLint
}

if (!Boolean.getBoolean("skipSass")) {
    processResources.dependsOn compileSass
} else {
    println("Skipping Sass compilation...")
}

if (!Boolean.getBoolean("skipNodeModulesCleanUp")) {
    clean.delete << new File(project(":webapp").projectDir, "node_modules")
    clean.delete << fileTree(dir: project(":webapp").projectDir.getPath() + '/resources/static/js', include: '*-bundle.js')
} else {
    println("Skipping node_modules cleanup...")
}

sourceSets {
    main {
        resources {
            srcDirs "${project.buildDir}/generated-src/main/resources", "${project.projectDir}/../resources"
        }
    }
}

javadoc {
    enabled false
}

war {
    def currentTime = java.time.ZonedDateTime.now()

    manifest {
        attributes("Implementation-Title": project.name,
                "Implementation-Vendor": project.group,
                "Created-By": project.group,
                "Implementation-Date": currentTime,
                "Specification-Version": rootProject.currentRevision,
                "Implementation-Version": project.version)
    }
    from "${project.buildDir}/generated-src/main/resources", { into "WEB-INF/classes" }
    enabled = !rootProject.publishingRelease
}